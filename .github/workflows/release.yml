name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-release:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: ast-grep-mcp
            asset_name: ast-grep-mcp-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: ast-grep-mcp.exe
            asset_name: ast-grep-mcp-windows-x86_64.exe
          - os: macOS-latest
            target: x86_64-apple-darwin
            artifact_name: ast-grep-mcp
            asset_name: ast-grep-mcp-macos-x86_64
          - os: macOS-latest
            target: aarch64-apple-darwin
            artifact_name: ast-grep-mcp
            asset_name: ast-grep-mcp-macos-aarch64

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Rename binary
      run: |
        mkdir -p release-assets
        cp ./target/${{ matrix.target }}/release/${{ matrix.artifact_name }} release-assets/${{ matrix.asset_name }}

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: release-assets/${{ matrix.asset_name }}

  publish-crate:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: build-release
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Publish to crates.io
      run: cargo publish --token ${{ secrets.CRATES_TOKEN }}